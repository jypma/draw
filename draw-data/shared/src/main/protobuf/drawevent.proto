syntax = "proto2";
import "point.proto";

package draw.data;

enum BrightnessStyle {
    black = 0;
    dark = 1;
    bright = 2;
}


message DrawEvent {
    required uint64 sequenceNr = 1;
    required DrawEventBody body = 2;
    optional uint64 timestamp = 3;
    optional bytes userId = 4;
}

message DrawEventBody {
    oneof sealed_value {
        ScribbleStarted scribbleStarted = 1;
        ScribbleContinued scribbleContinued = 2;
        ObjectDeleted objectDeleted = 3;
        DrawingCreated drawingCreated = 4;
        ObjectMoved objectMoved = 5;
        IconCreated iconCreated = 6;
        ObjectLabelled objectLabelled = 7;
        LinkCreated linkCreated = 8;
        LinkEdited linkEdited = 9;
        ObjectsLayedOut objectsLayedOut = 10;
    }
}

message DrawingCreated {

}

message ScribbleStarted {
    required string id = 1;
    repeated Point points = 2;
}

message ScribbleContinued {
    required string id = 1;
    repeated Point points = 2;
}

message ObjectDeleted {
    required string id = 1;
}

message ObjectMoved {
    required string id = 1;
    optional Point position = 2;
}

message ObjectsLayedOut {
    repeated ObjectMoved moved = 1;
}

message IconCreated {
    required string id = 1;
    optional Point position = 2;
    optional string category = 3;
    optional string name = 4;
    optional double width = 5;
    optional double height = 6;
    optional BrightnessStyle brightnessStyle = 7;
    optional int32 hue = 8;
}

message ObjectLabelled {
    required string id = 1;
    required string label = 2;
    optional double width = 3;
    optional double height = 4;
    optional double yOffset = 5;
}

message LinkCreated {
    required string id = 1;
    required string src = 2;
    required string dest = 3;
    optional int32 preferredDistance = 4; // Currently 1 = small, 2 = medium, 3 = large. Experiment with adding "elasticity" here as well to tweak the weight?
    optional sint32 preferredAngle = 5; // As seen from id1 to id2
}

message LinkEdited {
    required string id = 1;
    optional int32 preferredDistance = 4; // Currently 1 = small, 2 = medium, 3 = large. Experiment with adding "elasticity" here as well to tweak the weight?
    optional sint32 preferredAngle = 5; // As seen from id1 to id2
}
